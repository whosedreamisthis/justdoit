@import 'tailwindcss';

:root {
	--background: #ffffff;
	--foreground: #171717;
}

@theme inline {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--font-sans: var(--font-geist-sans);
	--font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
	:root {
		--background: #0a0a0a;
		--foreground: #ededed;
	}
}

body {
	background: #f3dac4;
	color: var(--foreground);
	font-family: Arial, Helvetica, sans-serif;
	overflow-y: auto; /* Allows scrolling */
	scrollbar-width: none;
}
body::-webkit-scrollbar {
	display: none; /* Chrome, Safari */
}

.goal-container {
	transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
	background-color: #e07a5f; /* Terracotta */
}
/* .goals-container {
	height: 100px; /* ✅ Creates space so goals don’t block the tab buttons 
} */

.bg-primary {
	background-color: #9caf88; /* Sage Green */
}

.progress-bar {
	background-color: #d9b44a; /* Ochre Yellow */
}

.text-primary {
	color: #725c3e; /* Deep Umber */
}

.text-accent {
	color: #c49c92; /* Dusty Rose */
}

.bg-subtle-background {
	background-color: #f3dac4; /* ✅ Warm Beige */
}
.text-subtle {
	color: #f3dac4; /* ✅ Warm Beige */
}

.bg-card-0 {
	background-color: #e6a57d;
} /* ✅ Terracotta */
.bg-card-1 {
	background-color: #a7c7a5;
} /* ✅ Moss Green */
.bg-card-2 {
	background-color: #eec170;
} /* ✅ Muted Ochre */
.bg-card-3 {
	background-color: #d4a5a5;
} /* ✅ Dusty Rose */
.bg-card-4 {
	background-color: #c8a98e;
} /* ✅ Pale Umber */
.bg-green-earth {
	background-color: #6b8e23;
} /* ✅ Forest Green */
.bg-olive-earth {
	background-color: #a5a58d;
} /* ✅ Olive Green */
.bg-blue-earth {
	background-color: #92b6d5;
} /* ✅ Muted Sky Blue */
.bg-muted-blue {
	background-color: #507b8b;
} /* ✅ Softened Blue */
.bg-charcoal {
	background-color: #3b3b3b;
}
.bg-olive-earth {
	background-color: #b5a675;
} /* Olive muted */
.bg-deep-olive {
	background-color: #4f4a41;
}
.bg-sandstone {
	background-color: #d4b89d;
} /* Light earthy beige */
.text-dark-earth {
	color: #5c4033;
} /* ✅ Rich Umber */
.text-charcoal {
	color: #3b3b3b;
} /* ✅ Charcoal Grey */
.text-deep-olive {
	color: #4f4a41;
} /* ✅ Deep Olive */
.text-subtle {
	color: #f3dac4;
}
.progress-button {
	display: flex;
	align-items: center; /* ✅ Centers vertically */
	justify-content: center; /* ✅ Centers horizontally */
	width: 30px;
	height: 30px;
	text-align: center;
}
.active-tab {
	background-color: #3b3b3b; /* Sandstone */
	color: #f3dac4; /* Text stays readable */
}
.scroll-container {
	overflow-y: auto;
	scrollbar-width: none; /* Firefox */
}

.scroll-container::-webkit-scrollbar {
	display: none; /* Chrome, Safari */
}
.habits-container {
	max-height: none;
	overflow: clip; /* ✅ Stronger than hidden, fully removes scroll functionality */
}
.bottom-nav {
	position: fixed;
	/* bottom: 0; */
	width: 100%;
	z-index: 1000; /* ✅ Ensures it's above overlapping content */
}

.tab-buttons {
	position: fixed;
	border-width: 2px;
	border-color: #b1907f;
	border-bottom: 0px;
	border-left: 0px;
	border-right: 0px;

	bottom: 0;
	width: 100%;
	display: flex;
	justify-content: space-around; /* ✅ Even spacing for buttons */
	/* padding: 10px 0; */
	z-index: 1000; /* ✅ Ensures tab buttons stay on top */
	pointer-events: auto; /* ✅ Prevents other elements from blocking clicks */
	background-color: #f3dac4;
}

.expand-arrow {
	color: #a48f72; /* ✅ Softer earthy tone */
	font-size: 24px; /* ✅ Slightly bigger for better visibility */
	transition: color 0.3s ease-in-out; /* ✅ Smooth transition when toggling */
}
.category-container {
	border: 2px solid #a48f72; /* ✅ Earthy tone */
	border-radius: 8px; /* ✅ Slightly rounded edges for a softer feel */
	padding: 12px; /* ✅ Adds breathing room inside the category */
	margin-bottom: 10px; /* ✅ Creates separation between categories */
}
.card-container {
	border-radius: 0px; /* ✅ Removes all rounded corners */
}
.minimized-card,
.minimized-goal-card {
	height: 100px; /* ✅ Match both components */
}
.card-container {
	display: flex;
	/* flex-direction: column; */
	justify-content: space-between; /* ✅ Push content to top, buttons to bottom */
	position: relative;
	padding-bottom: 40px; /* ✅ Creates space for buttons */
}

.card-buttons {
	display: flex;
	justify-content: flex-start; /* ✅ Align buttons to the right */
	/* gap: 2px; /* ✅ Space between + and - buttons  */
}

.goal-card-icon {
	font-size: 25px; /* ✅ Adjust to your preferred size */
	bottom: 5px;
	right: 5px;
	color: black;
	width: '50px';
}

.progress-icon {
	font-size: 25px; /* ✅ Adjust to your preferred size */
	color: black;

	width: '50px';
}

.explore-icon {
	display: flex;
	justify-content: center;

	font-size: 25px; /* ✅ Adjust to your preferred size */
	color: black;
	width: '50px';
}
.day-square {
	background-color: #3b3b3b;
	height: 40px;
	width: 40px;
	z-index: 1000;
	color: #f3dac4;
	border-width: 1px;
	border-radius: 5px;
}
html,
body,
#root {
	/* #root is common in React apps */
	height: 100%;
	margin: 0;
	padding: 0;
}
.day-squares-container {
	display: flex; /* Makes the container a flex container */
	flex-direction: row; /* Arranges items in a row (this is the default, but good to be explicit) */
	/* Optional: How to align items vertically in the row if the parent has height */
	align-items: center; /* Aligns items to the center vertically */
	/* Optional: How to distribute space horizontally if there's extra space */
	justify-content: flex-start; /* Aligns items to the start (left) of the row */
	/* Or justify-content: center; for horizontally centering the row of squares */
	/* Or justify-content: space-between; to space them out evenly */

	/* Add any other container styling, e.g., padding */
	padding-left: 0px;
	padding-top: 15px;
	padding-bottom: 15px;

	gap: 12px;
	/* Optional: If you want the container to wrap to the next line if squares overflow */
	flex-wrap: wrap;
}
.bg-deep-olive {
	/* Previous: background-color: #4f4a41; (Darker) */
	background-color: #a48f72; /* ✅ Lighter earthy gray/brown (matches expand-arrow color) */
	/* Or */
	/* background-color: #cdc9c3; */ /* A very light, slightly warm gray */
	/* Or */
	/* background-color: #b0a8a0; */ /* A medium-light stone gray */
}

.card {
	border-color: #bbbbbb;
	border-width: 1px;
}

.completed-card {
	border-color: #bbbbbb;
	border-width: 1px;
}

.add-button-container {
	color: #3b3b3b;
}

.add-button {
	color: #3b3b3b;
	border-width: 1px;
	padding: 2px 6px;
	border-radius: 5px;
	background-color: #f3dac4;
	margin-top: 10px;
}
.profile {
	width: 50px;
}

.profile-tab {
	color: black;
}

.button-primary-light {
	background-color: #e6b89c;
}

.button-secondary-light {
	background-color: #b08e77;
}

.day-square-filled-green {
	background-color: #77dd77; /* Or your preferred deep pastel green hex code */
}
.title {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	max-width: min(80%, 500px); /* Adjust based on screen size */
}

.goal-item {
	/* This ensures that when the transform is applied/removed, it animates smoothly */
	transition: transform 0.5s ease-out; /* Keep this */
	position: relative; /* Important for z-index during transition */
	will-change: transform; /* Hint to the browser for performance */
}

/* Style for the container when animation is active */
/* IMPORTANT: Change this selector to apply styles to children of the animating container */
.is-animating-container .goal-item {
	z-index: 10; /* Keep the animating goals above others */
	box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Add a subtle lift */
}

/* REMOVE THIS, as it's no longer used for the new animation approach */
/* .goal-item.moving-up {
    transform: translateY(-30px);
    opacity: 0.8;
} */

/* ADD THIS: Style for the container when animation is active */
.is-animating .goal-item {
	z-index: 10; /* Ensures the moving item is above others */
	/* You can add more styles here if you want visual feedback, e.g., box-shadow */
	box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}
.goal-item.moving-up {
	transform: translateY(-30px); /* Animates upward */
	opacity: 0.8; /* Makes transition noticeable */
}

.day-square {
	/* Current or previous size */
	width: 16px; /* Example: adjust as needed */
	height: 16px; /* Example: adjust as needed */
	border: 1px solid #fff; /* Example: your border style */
	background-color: #f0f0f0; /* Example: default background */
	/* Add other styles like border-radius, etc. if you have them */

	/* To make them slightly larger, increase width and height */
	width: 20px; /* Increased from 16px */
	height: 20px; /* Increased from 16px */
}

/* Make sure this class is defined as well for completed squares */
.day-square-filled-green {
	background-color: #4caf50; /* Example green color */
}

/* The container holding the squares might also need adjustments for spacing */
.day-squares-container {
	display: flex;

	gap: 5px; /* Adjust gap as needed if squares become too close */
	/* original was gap-10, which might be too large for larger squares */
	/* Consider changing gap: 10px; to something smaller like gap: 5px; if they are too spread out */
}
.profile-tab,
.explore-container {
	overflow: hidden;
	scrollbar-width: none; /* Firefox */
}

.profile-tab::-webkit-scrollbar,
.explore-container::-webkit-scrollbar {
	display: none; /* Chrome, Safari */
}

.description {
	max-width: 250px;
}

.progress-complete {
	color: green;
}
.progress-incomplete {
	color: #779ecb;
}

.stats-item {
	border-color: #3b3b3b;
	border-width: 1px;
}

.tab-title {
	text-align: center;
}
.react-calendar {
	color: #333; /* Darker text */
}

.react-calendar__tile {
	font-weight: bold; /* Make day numbers more visible */
	color: black;
}

.react-calendar__tile--now {
	background-color: transparent !important;
	color: #000 !important; /* Adjust text color for visibility */
	border: 2px solid #000 !important; /* Optional: add a border */
	border-radius: 5px;
}

.react-calendar .react-calendar__tile--now {
	border: 1px solid black !important; /* Set border width & color in one property */
}

.react-calendar__month-view__days__day--weekend {
	color: black !important; /* Change text color */
}

.highlighted-cell {
	background-color: #77dd77 !important;
	/* max-width: 40px !important; */
	/* max-height: 40px !important; */
	display: flex;
	align-items: center;
	/* border: 1px solid black !important; */
	border-radius: 3px;
	justify-content: center;
	font-weight: bold;
	color: black;
}
/* MyCalendar.css */

/* Override the active/selected tile background color */
.react-calendar__tile--active {
	background-color: transparent !important; /* Prevents the selected tile from changing background */
	/* You might also want to ensure its text color doesn't change on selection */
	color: inherit !important; /* Keep the number color the same as unselected tiles */
}

/* You might also want to remove hover effects if you don't want any visual change on hover */
.react-calendar__tile:hover:not(.highlighted-cell):not(
		.react-calendar__tile--active
	) {
	background-color: transparent !important;
}

/* Your existing highlighted cell style */

/* Optional: If you had any previous disabled styles, you can remove or comment them out now */
/*
.react-calendar__tile--disabled {
  background-color: transparent !important;
  color: inherit !important;
  cursor: default !important;
}
*/
.completed-day {
	background-color: #a8e6a0 !important; /* Example: Green background for completed days */
	color: white !important; /* Example: White text for completed days */
	border-radius: 5px;
	/* background-color: black !important; */
	border-color: #3b3b3b !important;
	border-width: 5px !important;
	border: 2px solid black !important;
}

/* Ensure the highlighted-cell is still distinct, if you keep it */
.highlighted-cell {
	background-color: lightblue;
	color: white;
}

/* You might want to adjust hover/active states for completed days too */
.react-calendar__tile.completed-day:hover,
.react-calendar__tile.completed-day:active {
	background-color: #a8e6a0; /* Slightly darker green on hover/active */
	color: white;
}

/* Override default react-calendar selected styles if needed (as discussed before) */
.react-calendar__tile--active {
	background-color: transparent !important;
	color: inherit !important;
}
.react-calendar__tile:hover:not(.highlighted-cell):not(.completed-day):not(
		.react-calendar__tile--active
	) {
	background-color: #f0f0f0; /* Default hover for non-highlighted/completed */
}
.react-calendar__tile--active.completed-day {
	background-color: #a8e6a0 !important;
}

.react-calendar__tile--hasActive.completed-day {
	background-color: #a8e6a0 !important;
}

.react-calendar__tile:enabled:hover.completed-day,
.react-calendar__tile:enabled:focus.completed-day {
	background-color: #a8e6a0 !important; /* A slightly different shade for hover/focus */
}
